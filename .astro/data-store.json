[["Map",1,2,7,8,130,131,222,223],"meta::meta",["Map",3,4,5,6],"astro-version","5.0.0-beta.6","config-digest","c6c003b44c6bcce4","blog",["Map",9,10,21,22],"ai-fails",{"id":9,"data":11,"body":17,"filePath":18,"digest":19,"deferredRender":20},{"title":12,"excerpt":13,"type":7,"created_date":14,"status":15,"coverimage":16,"slug":9},"AI Fails","Some funny instances where AI has crashed and burned",["Date","2024-10-30T00:00:00.000Z"],"published","ai-fails.jpg","## Test\n\n```bash title=\"test\" showLineNumbers\n#!/bin/bash\n\ncodebase() {\n  echo \"Hello, World!\"\n}\n\n```\n\n## Markdown Syntax Test\n\nThis document is designed to test **Markdown** support in your web application. It includes all standard syntax elements and four code fences for *bash*, *TypeScript*, *Flutter*, and *JSON*.\n\n## Headings\n\n### Heading Level 3\n\n#### Heading Level 4\n\n##### Heading Level 5\n\n###### Heading Level 6\n\n## Paragraphs\n\nThis is a paragraph. It has two sentences.\n\nThis is another paragraph. It is separated by a blank line.\n\n## Emphasis\n\n- *Italic text using asterisks*\n\n- **Italic text using underscores**\n\n- **Bold text using double asterisks**\n\n- **Bold text using double underscores**\n\n- ***Bold and italic text using triple asterisks***\n\n- ***Bold and italic text using triple underscores***\n\n## Blockquotes\n\n> This is a blockquote.\n>\n> It can span multiple lines.\n\n## Lists\n\n### Unordered List\n\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n- Item 3\n\n### Ordered List\n\n1. First item\n2. Second item\n   1. Subitem 2.1\n   2. Subitem 2.2\n3. Third item\n\n## Code Blocks\n\n### Inline Code\n\nUse the `printf()` function.\n\n### Code Fences\n\n#### Bash\n\n```bash\n#!/bin/bash\necho \"Hello, World!\"\n```\n\n#### TypeScript\n\n```typescript\nfunction greet(name: string): string {\n    return `Hello, ${name}!`;\n}\n```\n\n#### Flutter\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(home: Text('Hello, Flutter!'));\n  }\n}\n```\n\n#### JSON\n\n```json\n{\n  \"name\": \"John Doe\",\n  \"age\": 30,\n  \"isEmployed\": true\n}\n```\n\n## Horizontal Rule\n\n---\n\n## Links\n\nThis is a [link to OpenAI](https://www.openai.com).\n\n## Images\n\n![Alt text for image](https://via.placeholder.com/150 \"Optional title\")\n\n## Tables\n\n| Syntax      | Description |\n| ----------- | ----------- |\n| Header      | Title       |\n| Paragraph   | Text        |\n\n## Task List\n\n- [x] Completed task\n- [ ] Incomplete task\n\n## Strikethrough\n\n~~This text is crossed out.~~\n\n## Footnotes\n\nThis is a sentence with a footnote.[^1]\n\n[^1]: This is the footnote.\n\n## Escape Characters\n\n*This text is not italicized because the asterisk is escaped.*\n\n## Emoji\n\nHere is a smiley face: ðŸ˜„","src/content/blog/ai-fails.mdx","bd61bcbee7a53ef5",true,"truenas-scale-electric-eel",{"id":21,"data":23,"body":28,"filePath":29,"digest":30,"rendered":31},{"title":24,"excerpt":25,"type":7,"created_date":26,"status":15,"coverimage":27,"slug":21},"TrueNAS Scale Electric Eel First Look","TrueNAS Scale Electric Eel",["Date","2024-10-30T00:00:00.000Z"],"truenas-scale-electric-eel.png","## Test\n\n```bash title=\"test\" linenumbers\ncodebase test\n```\n\n## Markdown Syntax Test\n\nThis document is designed to test **Markdown** support in your web application. It includes all standard syntax elements and four code fences for *bash*, *TypeScript*, *Flutter*, and *JSON*.\n\n## Headings\n\n### Heading Level 3\n\n#### Heading Level 4\n\n##### Heading Level 5\n\n###### Heading Level 6\n\n## Paragraphs\n\nThis is a paragraph. It has two sentences.\n\nThis is another paragraph. It is separated by a blank line.\n\n## Emphasis\n\n- *Italic text using asterisks*\n\n- **Italic text using underscores**\n\n- **Bold text using double asterisks**\n\n- **Bold text using double underscores**\n\n- ***Bold and italic text using triple asterisks***\n\n- ***Bold and italic text using triple underscores***\n\n## Blockquotes\n\n> This is a blockquote.\n>\n> It can span multiple lines.\n\n## Lists\n\n### Unordered List\n\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n- Item 3\n\n### Ordered List\n\n1. First item\n2. Second item\n   1. Subitem 2.1\n   2. Subitem 2.2\n3. Third item\n\n## Code Blocks\n\n### Inline Code\n\nUse the `printf()` function.\n\n### Code Fences\n\n#### Bash\n\n```bash\n#!/bin/bash\necho \"Hello, World!\"\n```\n\n#### TypeScript\n\n```typescript\nfunction greet(name: string): string {\n    return `Hello, ${name}!`;\n}\n```\n\n#### Flutter\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(home: Text('Hello, Flutter!'));\n  }\n}\n```\n\n#### JSON\n\n```json\n{\n  \"name\": \"John Doe\",\n  \"age\": 30,\n  \"isEmployed\": true\n}\n```\n\n## Horizontal Rule\n\n---\n\n## Links\n\nThis is a [link to OpenAI](https://www.openai.com).\n\n## Images\n\n![Alt text for image](https://via.placeholder.com/150 \"Optional title\")\n\n## Tables\n\n| Syntax      | Description |\n| ----------- | ----------- |\n| Header      | Title       |\n| Paragraph   | Text        |\n\n## Task List\n\n- [x] Completed task\n- [ ] Incomplete task\n\n## Strikethrough\n\n~~This text is crossed out.~~\n\n## Footnotes\n\nThis is a sentence with a footnote.[^1]\n\n[^1]: This is the footnote.\n\n## Escape Characters\n\n*This text is not italicized because the asterisk is escaped.*\n\n## Emoji\n\nHere is a smiley face: ðŸ˜„","src/content/blog/truenas-scale-electric-eel-first-look.md","94b1385a163f7d3c",{"html":32,"metadata":33},"\u003Ch2 id=\"test\">Test\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">codebase\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003Cbutton class=\"copy\" data-code=\"codebase test\n\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \">\u003Cspan class=\"ready\">\u003C/span>\u003Cspan class=\"success\">\u003C/span>\u003C/button>\u003C/pre>\n\u003Ch2 id=\"markdown-syntax-test\">Markdown Syntax Test\u003C/h2>\n\u003Cp>This document is designed to test \u003Cstrong>Markdown\u003C/strong> support in your web application. It includes all standard syntax elements and four code fences for \u003Cem>bash\u003C/em>, \u003Cem>TypeScript\u003C/em>, \u003Cem>Flutter\u003C/em>, and \u003Cem>JSON\u003C/em>.\u003C/p>\n\u003Ch2 id=\"headings\">Headings\u003C/h2>\n\u003Ch3 id=\"heading-level-3\">Heading Level 3\u003C/h3>\n\u003Ch4 id=\"heading-level-4\">Heading Level 4\u003C/h4>\n\u003Ch5 id=\"heading-level-5\">Heading Level 5\u003C/h5>\n\u003Ch6 id=\"heading-level-6\">Heading Level 6\u003C/h6>\n\u003Ch2 id=\"paragraphs\">Paragraphs\u003C/h2>\n\u003Cp>This is a paragraph. It has two sentences.\u003C/p>\n\u003Cp>This is another paragraph. It is separated by a blank line.\u003C/p>\n\u003Ch2 id=\"emphasis\">Emphasis\u003C/h2>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cem>Italic text using asterisks\u003C/em>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Italic text using underscores\u003C/strong>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Bold text using double asterisks\u003C/strong>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Bold text using double underscores\u003C/strong>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cem>\u003Cstrong>Bold and italic text using triple asterisks\u003C/strong>\u003C/em>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cem>\u003Cstrong>Bold and italic text using triple underscores\u003C/strong>\u003C/em>\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"blockquotes\">Blockquotes\u003C/h2>\n\u003Cblockquote>\n\u003Cp>This is a blockquote.\u003C/p>\n\u003Cp>It can span multiple lines.\u003C/p>\n\u003C/blockquote>\n\u003Ch2 id=\"lists\">Lists\u003C/h2>\n\u003Ch3 id=\"unordered-list\">Unordered List\u003C/h3>\n\u003Cul>\n\u003Cli>Item 1\u003C/li>\n\u003Cli>Item 2\n\u003Cul>\n\u003Cli>Subitem 2.1\u003C/li>\n\u003Cli>Subitem 2.2\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Item 3\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"ordered-list\">Ordered List\u003C/h3>\n\u003Col>\n\u003Cli>First item\u003C/li>\n\u003Cli>Second item\n\u003Col>\n\u003Cli>Subitem 2.1\u003C/li>\n\u003Cli>Subitem 2.2\u003C/li>\n\u003C/ol>\n\u003C/li>\n\u003Cli>Third item\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"code-blocks\">Code Blocks\u003C/h2>\n\u003Ch3 id=\"inline-code\">Inline Code\u003C/h3>\n\u003Cp>Use the \u003Ccode>printf()\u003C/code> function.\u003C/p>\n\u003Ch3 id=\"code-fences\">Code Fences\u003C/h3>\n\u003Ch4 id=\"bash\">Bash\u003C/h4>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">#!/bin/bash\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hello, World!\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003Cbutton class=\"copy\" data-code=\"#!/bin/bash\necho &#x22;Hello, World!&#x22;\n\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \">\u003Cspan class=\"ready\">\u003C/span>\u003Cspan class=\"success\">\u003C/span>\u003C/button>\u003C/pre>\n\u003Ch4 id=\"typescript\">TypeScript\u003C/h4>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"typescript\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> greet\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">name\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> `Hello, ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}!`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003Cbutton class=\"copy\" data-code=\"function greet(name: string): string {\n    return &#x60;Hello, ${name}!&#x60;;\n}\n\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \">\u003Cspan class=\"ready\">\u003C/span>\u003Cspan class=\"success\">\u003C/span>\u003C/button>\u003C/pre>\n\u003Ch4 id=\"flutter\">Flutter\u003C/h4>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"dart\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'package:flutter/material.dart'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">void\u003C/span>\u003Cspan style=\"color:#B392F0\"> main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> runApp\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">MyApp\u003C/span>\u003Cspan style=\"color:#E1E4E8\">());\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#79B8FF\"> MyApp\u003C/span>\u003Cspan style=\"color:#F97583\"> extends\u003C/span>\u003Cspan style=\"color:#79B8FF\"> StatelessWidget\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  @override\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  Widget\u003C/span>\u003Cspan style=\"color:#B392F0\"> build\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">BuildContext\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> context) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#79B8FF\"> MaterialApp\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(home\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Hello, Flutter!'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003Cbutton class=\"copy\" data-code=\"import &#x27;package:flutter/material.dart&#x27;;\n\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(home: Text(&#x27;Hello, Flutter!&#x27;));\n  }\n}\n\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \">\u003Cspan class=\"ready\">\u003C/span>\u003Cspan class=\"success\">\u003C/span>\u003C/button>\u003C/pre>\n\u003Ch4 id=\"json\">JSON\u003C/h4>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"json\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"name\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"John Doe\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"age\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">30\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  \"isEmployed\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003Cbutton class=\"copy\" data-code=\"{\n  &#x22;name&#x22;: &#x22;John Doe&#x22;,\n  &#x22;age&#x22;: 30,\n  &#x22;isEmployed&#x22;: true\n}\n\" onclick=\"\n          navigator.clipboard.writeText(this.dataset.code);\n          this.classList.add(&#x27;copied&#x27;);\n          setTimeout(() => this.classList.remove(&#x27;copied&#x27;), 2000)\n        \">\u003Cspan class=\"ready\">\u003C/span>\u003Cspan class=\"success\">\u003C/span>\u003C/button>\u003C/pre>\n\u003Ch2 id=\"horizontal-rule\">Horizontal Rule\u003C/h2>\n\u003Chr>\n\u003Ch2 id=\"links\">Links\u003C/h2>\n\u003Cp>This is a \u003Ca href=\"https://www.openai.com\">link to OpenAI\u003C/a>.\u003C/p>\n\u003Ch2 id=\"images\">Images\u003C/h2>\n\u003Cp>\u003Cimg src=\"https://via.placeholder.com/150\" alt=\"Alt text for image\" title=\"Optional title\">\u003C/p>\n\u003Ch2 id=\"tables\">Tables\u003C/h2>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Syntax\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Header\u003C/td>\u003Ctd>Title\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Paragraph\u003C/td>\u003Ctd>Text\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"task-list\">Task List\u003C/h2>\n\u003Cul class=\"contains-task-list\">\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" checked disabled> Completed task\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Incomplete task\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"strikethrough\">Strikethrough\u003C/h2>\n\u003Cp>\u003Cdel>This text is crossed out.\u003C/del>\u003C/p>\n\u003Ch2 id=\"footnotes\">Footnotes\u003C/h2>\n\u003Cp>This is a sentence with a footnote.\u003Csup>\u003Ca href=\"#user-content-fn-1\" id=\"user-content-fnref-1\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">1\u003C/a>\u003C/sup>\u003C/p>\n\u003Ch2 id=\"escape-characters\">Escape Characters\u003C/h2>\n\u003Cp>\u003Cem>This text is not italicized because the asterisk is escaped.\u003C/em>\u003C/p>\n\u003Ch2 id=\"emoji\">Emoji\u003C/h2>\n\u003Cp>Here is a smiley face: ðŸ˜„\u003C/p>\n\u003Csection data-footnotes=\"\" class=\"footnotes\">\u003Ch2 class=\"sr-only\" id=\"footnote-label\">Footnotes\u003C/h2>\n\u003Col>\n\u003Cli id=\"user-content-fn-1\">\n\u003Cp>This is the footnote. \u003Ca href=\"#user-content-fnref-1\" data-footnote-backref=\"\" aria-label=\"Back to reference 1\" class=\"data-footnote-backref\">â†©\u003C/a>\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003C/section>",{"headings":34,"imagePaths":129,"frontmatter":23},[35,39,42,45,49,53,57,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,127],{"depth":36,"slug":37,"text":38},2,"test","Test",{"depth":36,"slug":40,"text":41},"markdown-syntax-test","Markdown Syntax Test",{"depth":36,"slug":43,"text":44},"headings","Headings",{"depth":46,"slug":47,"text":48},3,"heading-level-3","Heading Level 3",{"depth":50,"slug":51,"text":52},4,"heading-level-4","Heading Level 4",{"depth":54,"slug":55,"text":56},5,"heading-level-5","Heading Level 5",{"depth":58,"slug":59,"text":60},6,"heading-level-6","Heading Level 6",{"depth":36,"slug":62,"text":63},"paragraphs","Paragraphs",{"depth":36,"slug":65,"text":66},"emphasis","Emphasis",{"depth":36,"slug":68,"text":69},"blockquotes","Blockquotes",{"depth":36,"slug":71,"text":72},"lists","Lists",{"depth":46,"slug":74,"text":75},"unordered-list","Unordered List",{"depth":46,"slug":77,"text":78},"ordered-list","Ordered List",{"depth":36,"slug":80,"text":81},"code-blocks","Code Blocks",{"depth":46,"slug":83,"text":84},"inline-code","Inline Code",{"depth":46,"slug":86,"text":87},"code-fences","Code Fences",{"depth":50,"slug":89,"text":90},"bash","Bash",{"depth":50,"slug":92,"text":93},"typescript","TypeScript",{"depth":50,"slug":95,"text":96},"flutter","Flutter",{"depth":50,"slug":98,"text":99},"json","JSON",{"depth":36,"slug":101,"text":102},"horizontal-rule","Horizontal Rule",{"depth":36,"slug":104,"text":105},"links","Links",{"depth":36,"slug":107,"text":108},"images","Images",{"depth":36,"slug":110,"text":111},"tables","Tables",{"depth":36,"slug":113,"text":114},"task-list","Task List",{"depth":36,"slug":116,"text":117},"strikethrough","Strikethrough",{"depth":36,"slug":119,"text":120},"footnotes","Footnotes",{"depth":36,"slug":122,"text":123},"escape-characters","Escape Characters",{"depth":36,"slug":125,"text":126},"emoji","Emoji",{"depth":36,"slug":128,"text":120},"footnote-label",[],"tech",["Map",132,133,21,178],"opnsense",{"id":132,"data":134,"body":141,"filePath":142,"digest":143,"rendered":144},{"title":135,"excerpt":135,"tags":136,"vendorlogo":139,"slug":132,"created_date":140},"OPNsense",[137,138,132],"networking","firewall","opnsense-icon.svg",["Date","2024-10-30T00:00:00.000Z"],"## Test\n\n```bash title=\"test\" linenumbers\ncodebase test\n```\n\n## Markdown Syntax Test\n\nThis document is designed to test **Markdown** support in your web application. It includes all standard syntax elements and four code fences for *bash*, *TypeScript*, *Flutter*, and *JSON*.\n\n## Headings\n\n### Heading Level 3\n\n#### Heading Level 4\n\n##### Heading Level 5\n\n###### Heading Level 6\n\n## Paragraphs\n\nThis is a paragraph. It has two sentences.\n\nThis is another paragraph. It is separated by a blank line.\n\n## Emphasis\n\n- *Italic text using asterisks*\n\n- **Italic text using underscores**\n\n- **Bold text using double asterisks**\n\n- **Bold text using double underscores**\n\n- ***Bold and italic text using triple asterisks***\n\n- ***Bold and italic text using triple underscores***\n\n## Blockquotes\n\n> This is a blockquote.\n>\n> It can span multiple lines.\n\n## Lists\n\n### Unordered List\n\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n- Item 3\n\n### Ordered List\n\n1. First item\n2. Second item\n   1. Subitem 2.1\n   2. Subitem 2.2\n3. Third item\n\n## Code Blocks\n\n### Inline Code\n\nUse the `printf()` function.\n\n### Code Fences\n\n#### Bash\n\n```bash\n#!/bin/bash\necho \"Hello, World!\"\n```\n\n#### TypeScript\n\n```typescript showLineNumbers\nfunction greet(name: string): string {\n    return `Hello, ${name}!`;\n}\n```\n\n#### Flutter\n\n```dart\nimport 'package:flutter/material.dart';\n\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(home: Text('Hello, Flutter!'));\n  }\n}\n```\n\n#### JSON\n\n```json\n{\n  \"name\": \"John Doe\",\n  \"age\": 30,\n  \"isEmployed\": true\n}\n```\n\n## Horizontal Rule\n\n---\n\n## Links\n\nThis is a [link to OpenAI](https://www.openai.com).\n\n## Images\n\n![Alt text for image](https://via.placeholder.com/150 \"Optional title\")\n\n## Tables\n\n| Syntax      | Description |\n| ----------- | ----------- |\n| Header      | Title       |\n| Paragraph   | Text        |\n\n## Task List\n\n- [x] Completed task\n- [ ] Incomplete task\n\n## Strikethrough\n\n~~This text is crossed out.~~\n\n## Footnotes\n\nThis is a sentence with a footnote.[^1]\n\n[^1]: This is the footnote.\n\n## Escape Characters\n\n*This text is not italicized because the asterisk is escaped.*\n\n## Emoji\n\nHere is a smiley face: ðŸ˜„","src/content/tech/opnsense.md","e73f0c1775096651",{"html":32,"metadata":145},{"headings":146,"imagePaths":177,"frontmatter":134},[147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],{"depth":36,"slug":37,"text":38},{"depth":36,"slug":40,"text":41},{"depth":36,"slug":43,"text":44},{"depth":46,"slug":47,"text":48},{"depth":50,"slug":51,"text":52},{"depth":54,"slug":55,"text":56},{"depth":58,"slug":59,"text":60},{"depth":36,"slug":62,"text":63},{"depth":36,"slug":65,"text":66},{"depth":36,"slug":68,"text":69},{"depth":36,"slug":71,"text":72},{"depth":46,"slug":74,"text":75},{"depth":46,"slug":77,"text":78},{"depth":36,"slug":80,"text":81},{"depth":46,"slug":83,"text":84},{"depth":46,"slug":86,"text":87},{"depth":50,"slug":89,"text":90},{"depth":50,"slug":92,"text":93},{"depth":50,"slug":95,"text":96},{"depth":50,"slug":98,"text":99},{"depth":36,"slug":101,"text":102},{"depth":36,"slug":104,"text":105},{"depth":36,"slug":107,"text":108},{"depth":36,"slug":110,"text":111},{"depth":36,"slug":113,"text":114},{"depth":36,"slug":116,"text":117},{"depth":36,"slug":119,"text":120},{"depth":36,"slug":122,"text":123},{"depth":36,"slug":125,"text":126},{"depth":36,"slug":128,"text":120},[],{"id":21,"data":179,"body":28,"filePath":186,"digest":187,"rendered":188},{"title":25,"excerpt":25,"tags":180,"vendorlogo":184,"slug":21,"created_date":185},[181,182,183],"storage","nas","truenas","truenas-icon.svg",["Date","2024-10-30T00:00:00.000Z"],"src/content/tech/truenas-scale-electric-eel.md","dcdf0bbc72bfbc35",{"html":32,"metadata":189},{"headings":190,"imagePaths":221,"frontmatter":179},[191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],{"depth":36,"slug":37,"text":38},{"depth":36,"slug":40,"text":41},{"depth":36,"slug":43,"text":44},{"depth":46,"slug":47,"text":48},{"depth":50,"slug":51,"text":52},{"depth":54,"slug":55,"text":56},{"depth":58,"slug":59,"text":60},{"depth":36,"slug":62,"text":63},{"depth":36,"slug":65,"text":66},{"depth":36,"slug":68,"text":69},{"depth":36,"slug":71,"text":72},{"depth":46,"slug":74,"text":75},{"depth":46,"slug":77,"text":78},{"depth":36,"slug":80,"text":81},{"depth":46,"slug":83,"text":84},{"depth":46,"slug":86,"text":87},{"depth":50,"slug":89,"text":90},{"depth":50,"slug":92,"text":93},{"depth":50,"slug":95,"text":96},{"depth":50,"slug":98,"text":99},{"depth":36,"slug":101,"text":102},{"depth":36,"slug":104,"text":105},{"depth":36,"slug":107,"text":108},{"depth":36,"slug":110,"text":111},{"depth":36,"slug":113,"text":114},{"depth":36,"slug":116,"text":117},{"depth":36,"slug":119,"text":120},{"depth":36,"slug":122,"text":123},{"depth":36,"slug":125,"text":126},{"depth":36,"slug":128,"text":120},[],"projects",["Map",224,225],"lbwebrtc-embedded-linux-system-suite",{"id":224,"data":226,"body":28,"filePath":231,"digest":232,"rendered":233},{"title":227,"excerpt":228,"type":229,"created_date":230,"status":15,"slug":224},"LBWebRTC Linux Embedded System Development","A multi-faceted development project for live broadcast media companies","project",["Date","2024-10-30T00:00:00.000Z"],"src/content/projects/lbwebrtc.md","4f847c3572914aa8",{"html":32,"metadata":234},{"headings":235,"imagePaths":266,"frontmatter":226},[236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],{"depth":36,"slug":37,"text":38},{"depth":36,"slug":40,"text":41},{"depth":36,"slug":43,"text":44},{"depth":46,"slug":47,"text":48},{"depth":50,"slug":51,"text":52},{"depth":54,"slug":55,"text":56},{"depth":58,"slug":59,"text":60},{"depth":36,"slug":62,"text":63},{"depth":36,"slug":65,"text":66},{"depth":36,"slug":68,"text":69},{"depth":36,"slug":71,"text":72},{"depth":46,"slug":74,"text":75},{"depth":46,"slug":77,"text":78},{"depth":36,"slug":80,"text":81},{"depth":46,"slug":83,"text":84},{"depth":46,"slug":86,"text":87},{"depth":50,"slug":89,"text":90},{"depth":50,"slug":92,"text":93},{"depth":50,"slug":95,"text":96},{"depth":50,"slug":98,"text":99},{"depth":36,"slug":101,"text":102},{"depth":36,"slug":104,"text":105},{"depth":36,"slug":107,"text":108},{"depth":36,"slug":110,"text":111},{"depth":36,"slug":113,"text":114},{"depth":36,"slug":116,"text":117},{"depth":36,"slug":119,"text":120},{"depth":36,"slug":122,"text":123},{"depth":36,"slug":125,"text":126},{"depth":36,"slug":128,"text":120},[]]