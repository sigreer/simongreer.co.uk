---
import { Image } from 'astro:assets';
const { title, excerpt, slug, tags, coverimage, className } = Astro.props


const allImages = import.meta.glob('../images/covers/*', { eager: true }) as Record<string, { default: ImageMetadata }>
const ImageSrc = coverimage ? allImages[`../images/covers/${coverimage}`]?.default : null;
console.log(tags);
---

<li class={`rounded-md h-[24rem] sm:min-h-[27rem] sm:max-w-[28rem]  bg-white shadow-md transition hover:shadow-xl hover:scale-105 2xl:h-[18rem] ${className}`}>
  <a href={`${slug}`} class="flex flex-col h-full gap-y-2 pb-2">
    <div class="w-full h-2/5 sm:h-3/7 md:h-1/2 rounded-t-md overflow-hidden p-1">
      {ImageSrc && (
      <Image 
        src={ImageSrc} 
        alt={title} 
        width={320}
        inferSize={true}
        format="webp"
        class="w-full h-full object-cover object-center p-0 mt-0 rounded-none"
        loading="lazy"
      />
      )}
    </div>
    <div class="flex h-3/5 sm:h-4/7 md:h-1/2 flex-col gap-y-1 px-4">
      <h3 class="2xl:text-2xl font-semibold line-clamp-1 py-1">
        {title}
      </h3>
      <p class="2xl:text-lg text-[10pt] h-4/5 line-clamp-4 leading-snug">
        {excerpt}
      </p>
      <div class="flex flex-wrap gap-x-1 gap-y-0 h-1/5 pb-1 pt-0 mt-0 tag-block">
        {tags?.map((tag) => (
          <span class="rounded-md px-2 py-1 text-xs md:text-base font-semibold text-white shadow-sm-light transition tag-style" data-tag={tag}>
            {tag}
          </span>
        ))}
      </div>
    </div>
  </a>
</li>