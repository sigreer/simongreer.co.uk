---
import { Image } from 'astro:assets';

interface Props {
  title: string;
  slug: string;
  excerpt?: string | null;
  tags?: string[];
  coverimage?: string;
  className?: string;
  type?: 'blog' | 'tech' | 'tag' | 'project' | 'vendor';
}

const { title, slug, excerpt, tags, coverimage, className = "", type = 'blog' } = Astro.props;
const allCoverImages = import.meta.glob<{ default: ImageMetadata }>('../images/covers/*', { eager: true });
const coverImage = coverimage ? allCoverImages[`../images/covers/${coverimage}`]?.default : null;
const basePath = type === 'tech' ? '/tech' : '/blog';
---

<li class={`rounded-md bg-white shadow-md transition border border-gray-500 hover:shadow-xl hover:scale-105 ${className}`}>
  <a href={`${basePath}/${slug}`} class="block h-full">
    {coverImage && (
      <div class="w-full h-48 rounded-t-md overflow-hidden">
        <Image 
          src={coverImage} 
          alt={title}
          width={400}
          height={300}
          class="w-full h-full object-cover object-center"
        />
      </div>
    )}
    <div class="p-4">
      <h3 class="text-xl font-semibold line-clamp-2 mb-2">
        {title}
      </h3>
      {excerpt && (
        <p class="text-gray-600 line-clamp-3 mb-2">
          {excerpt}
        </p>
      )}
      {tags && tags.length > 0 && (
        <div class="flex flex-wrap gap-2 tag-container">
          {tags.map((tag) => (
            <span
              class="tag-style rounded-md px-2 py-1 text-xs font-semibold text-white bg-purple-600 shadow-sm transition"
              data-tag={tag}
            >
              {tag}
            </span>
          ))}
        </div>
      )}
    </div>
  </a>
</li>

<script>
  declare global {
    interface Window {
      applyTagColorsToNewElements?: () => void;
    }
  }

  document.addEventListener('astro:page-load', () => {
    if (typeof window.applyTagColorsToNewElements === 'function') {
      window.applyTagColorsToNewElements();
    }
  });
</script>