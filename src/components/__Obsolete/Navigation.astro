---
---
<nav>
  <div class="mobile-menu-button" aria-label="Menu" role="button" tabindex="0">
    <span class="sr-only">Open menu</span>
    <!-- Add your menu icon here -->
  </div>

  <div class="mobile-menu hidden" id="mobile-menu">
    <!-- Add your menu items here -->
  </div>
</nav>

<script>
  // Use a class to handle menu state
  class MobileMenu {
    button: HTMLElement;
    menu: HTMLElement;
    isOpen: boolean = false;

    constructor() {
      this.button = document.querySelector('.mobile-menu-button');
      this.menu = document.querySelector('#mobile-menu');
      
      if (!this.button || !this.menu) return;
      
      this.setupEventListeners();
    }

    setupEventListeners() {
      // Handle click events
      this.button.addEventListener('click', () => this.toggleMenu());
      
      // Handle keyboard events
      this.button.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          this.toggleMenu();
        }
      });

      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (this.isOpen && !this.menu.contains(e.target as Node) && !this.button.contains(e.target as Node)) {
          this.closeMenu();
        }
      });
    }

    toggleMenu() {
      this.isOpen ? this.closeMenu() : this.openMenu();
    }

    openMenu() {
      this.menu.classList.remove('hidden');
      this.button.setAttribute('aria-expanded', 'true');
      this.isOpen = true;
    }

    closeMenu() {
      this.menu.classList.add('hidden');
      this.button.setAttribute('aria-expanded', 'false');
      this.isOpen = false;
    }
  }

  // Initialize the mobile menu
  document.addEventListener('DOMContentLoaded', () => {
    new MobileMenu();
  });

  // Handle Astro page transitions
  document.addEventListener('astro:page-load', () => {
    new MobileMenu();
  });
</script>

<style>
  .mobile-menu-button {
    display: none; /* Hide on desktop */
  }

  @media (max-width: 768px) {
    .mobile-menu-button {
      display: block;
    }
  }

  .hidden {
    display: none;
  }
</style> 