---
import { Image } from 'astro:assets';

interface Props {
  
  title: string;
  slug: string;
  excerpt?: string | null;
  tags?: string[];
  dataTags?: string;
  coverimage?: string;
  className?: string;
  type?: 'blog' | 'tech' | 'tag' | 'project' | 'vendor';
  created_date?: Date;
}

const { title, slug, excerpt, tags, coverimage, className = "", type = 'blog', dataTags, created_date } = Astro.props;
const allCoverImages = import.meta.glob<{ default: ImageMetadata }>('../../images/covers/*', { eager: true });
const coverImage = coverimage ? allCoverImages[`../../images/covers/${coverimage}`]?.default : null;
const basePath = type === 'tech' ? '/tech' : '/blog';
---

<li class={`rounded-md bg-white shadow-md transition border border-gray-700 hover:shadow-xl hover:scale-105 ${className} relative overflow-hidden`}
    data-tags={dataTags}>

  <a href={`${basePath}/${slug}`} class="group h-full flex flex-col">
    {created_date && (
      <div class="absolute top-0 right-0 bg-gray-800 text-white px-3 py-0 rounded-bl-lg text-xs z-10">
        {created_date.toLocaleDateString('en-GB', { 
          year: 'numeric',
          month: 'short',
          day: 'numeric'
        })}
      </div>
    )}
    {coverImage && (
      <div class="w-full h-48 rounded-t-md overflow-hidden relative">
        <div class="absolute inset-0 transition-opacity duration-300 opacity-100 group-hover:opacity-0"
          style="background: linear-gradient(to bottom left, #ec4899, #f472b6, #f9a8d4)">
        </div>
        <div class="absolute inset-0 transition-opacity duration-300 opacity-0 group-hover:opacity-100"
          style="background: linear-gradient(to bottom left, #f9a8d4, #f472b6, #ec4899)">
        </div>
        <Image 
          src={coverImage} 
          alt={title}
          width={400}
          height={300}
          class="relative w-full h-full object-cover object-center"
        />
      </div>
    )}
    <div class="p-4 flex-1 flex flex-col">
      <h3 class="text-base font-semibold line-clamp-2 mb-2">
        {title}
      </h3>
      {excerpt && (
        <p class="text-gray-600 line-clamp-5 text-sm mb-2">
          {excerpt}
        </p>
      )}
      {tags && tags.length > 0 && (
        <div class="flex flex-wrap-reverse gap-2 tag-container mt-auto">
          {dataTags && JSON.parse(dataTags).map((tag: string) => (
            <span
              class="tag-style rounded-md px-2 py-1 text-xs font-semibold text-white bg-purple-600 shadow-sm transition"
              data-tag={tag}
            >
              {tag}
            </span>
          ))}
        </div>
      )}
    </div>
  </a>
</li>

<script>
  declare global {
    interface Window {
      applyTagColorsToNewElements: () => void;
    }
  }

  document.addEventListener('astro:page-load', () => {
    if (typeof window.applyTagColorsToNewElements === 'function') {
      window.applyTagColorsToNewElements();
    }
  });
</script>