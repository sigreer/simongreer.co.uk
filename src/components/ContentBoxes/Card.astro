---
import { Image } from 'astro:assets';
import { getEntry } from 'astro:content';
import tagsData from '../../content/tags.json';

interface Props {
  
  title: string;
  slug: string;
  description?: string | null;
  tags?: { id: string; collection: string; data: { color: string } }[];
  coverimage?: string;
  className?: string;
  type?: 'blog' | 'tech' | 'tag' | 'project' | 'vendor';
  pubDate?: Date;
}

const { title, slug, description, tags, coverimage, className = "", type = 'blog', pubDate } = Astro.props;



const allCoverImages = import.meta.glob<{ default: ImageMetadata }>('../../images/covers/*', { eager: true });
const coverImage = coverimage ? allCoverImages[`../../images/covers/${coverimage}`]?.default : null;
const basePath = type === 'tech' ? '/tech' : '/blog';

const resolvedTags = tags?.map(tag => {

  const tagData = tagsData[tag.id as keyof typeof tagsData];
  return { ...tag, data: tagData };
}) ?? [];

---

<li class={`rounded-md bg-white transition-all duration-300 border border-[#9b9b9b] hover:shadow-xl hover:scale-105 ${className} relative overflow-hidden dark:bg-background dark:border-neutral-800 dark:border`}
    data-tags={tags?.map(tag => tag.id).join(',')}>

  <a href={`${basePath}/${slug}`} class="group h-full flex flex-col">
    {pubDate && (
      <div class="absolute top-0 right-0 bg-gray-800 text-white px-3 py-0 rounded-bl-lg text-xs z-10">
        {pubDate.toLocaleDateString('en-GB', { 
          year: 'numeric',
          month: 'short',
          day: 'numeric'
        })}
      </div>
    )}
    {coverImage && (
      <div class="w-full h-48 overflow-hidden relative">
        <div class="absolute inset-0 transition-opacity duration-300 opacity-100 group-hover:opacity-0 dark:opacity-0">
          <div class="w-full h-full" style="background: linear-gradient(to bottom left, #da2676, #e03f93, #f9a8d4)"></div>
        </div>
        <div class="absolute inset-0 transition-opacity duration-300 opacity-0 group-hover:opacity-100 dark:opacity-0">
          <div class="w-full h-full" style="background: linear-gradient(to bottom left, #f9a8d4, #f472b6, #da2676)"></div>
        </div>
        <div class="absolute inset-0 transition-opacity duration-300 opacity-0 dark:opacity-100 dark:group-hover:opacity-0">
          <div class="w-full h-full bg-background"></div>
        </div>
        <div class="absolute inset-0 transition-opacity duration-300 opacity-0 dark:group-hover:opacity-100">
          <div class="w-full h-full bg-background"></div>
        </div>
        <Image 
          src={coverImage} 
          alt={title}
          width={400}
          height={300}
          class="relative w-full h-full object-cover object-center border-b dark:border-neutral-800 border-gray-300 max-h-[300px]"
        />
      </div>
    )}
    <div class="p-4 flex-1 flex flex-col">
      <h3 class="text-base font-semibold line-clamp-2 mb-2">
        {title}
      </h3>
      {description && (
        <p class="text-gray-600 line-clamp-5 text-sm mb-2 dark:text-gray-200">
          {description}
        </p>
      )}
      {resolvedTags && resolvedTags.length > 0 && (
        <div class="flex flex-wrap-reverse gap-2 tag-container mt-auto">
          {resolvedTags.map((tag) => {
            return (
              <span
                class="tag-style rounded-md px-2 py-1 text-xs font-semibold text-white shadow-sm transition" 
                style={`background-color: ${tag.data?.color || '#6B7280'}`}
                data-tag={tag.id}
              >
                {tag.id}
              </span>
            );
          })}
        </div>
      )}
    </div>
  </a>
</li>