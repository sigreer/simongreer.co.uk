---
import { getCollection } from 'astro:content';
import PageLayout from "@layouts/PageLayout.astro";
import '@styles/custom.css';
import type { CollectionEntry } from 'astro:content';
import { GetInTouchDialog } from '@components/GetInTouchDialog';
import PricingAndInfoSection from '@components/Content/PricingAndInfoSection.astro';
import TechGrid from "@components/ContentBoxes/TechGrid.astro";
import TestimonialsSection from "@components/Content/TestimonialsSection.astro";
type TechWithStringTags = Omit<CollectionEntry<'tech'>, 'data'> & {
  data: Omit<CollectionEntry<'tech'>['data'], 'tags'> & {
    tags: string[] | undefined
  }
};
const techs = (await getCollection('tech'))
  .filter((tech) => 
    tech.data.pubDate && tech.data.hireme_filter === 'storage'
  )
  .map((tech) => ({
    ...tech,
    data: {
      ...tech.data,
      tags: tech.data.tags?.map(tag => tag.id)
    }
  })) as TechWithStringTags[];

---

<PageLayout title="Tech Stuff">
  <section class="py-2 px-6 md:pr-0 pl-0">
    <div class="grid grid-cols-10 md:gap-5">
      <div class="col-span-3 border-[#dcdde0] dark:bg-background dark:border-neutral-800 dark:text-gray-200 rounded-lg bg-white text-gray-800 border my-3 flex flex-col items-center">
        <div class="w-full border-b border-[#dcdde0] dark:border-neutral-800 px-8 py-2 ">
          <h2 class="text-xl font-bold mb-0 dark:text-themepurple">
            Vendors &amp; Products
          </h2>
        </div>
        <TechGrid techs={techs} />
        <div class="w-full p-6">
          <GetInTouchDialog client:only="react"  />
        </div>
      </div>
    
      <div class="col-span-7 border border-[#dcdde0] rounded-lg bg-white text-gray-900 my-3 dark:bg-background dark:border-neutral-800 dark:text-primary">
        <div class="w-full border-b border-[#dcdde0] dark:border-neutral-800 px-8 py-2 ">
          <h2 class="text-xl font-bold mb-0 dark:text-themepurple">
           Storage, NAS, etc.
          </h2>
        </div>
        <div class="w-full p-8">
        <p class="text-base mb-4">
          I've designed, deployed and supported network storage solutions for clients of various sizes and with varying needs. I have built hardware solutions from scratch and I've integrated complex, multi-part proprietary systems into existing environments.
        </p>
        <p class="text-base mb-4">
          Having a career focus on open source technologies, TrueNAS (formerly FreeNAS) is a go-to solution and something I recommend to customers that need flexibility and control over their storage infrastructure.
        </p>
        <p class="text-base mb-4">
          I'm a big proponent of ZFS as a filesystem (which is at the core of TrueNAS) and have developed a comprehensive understanding of its features sets, capabilities and quirks (of which there are many)
        </p>
        <p class="text-base mb-4">
          Like most techies that have muddied their hands in the real world, I've worked extensively with Microsoft products in order to integrate storage systems into Windows-based desktop and server environments. This has included but is certainly not limited to Windows Server, Windows 7/8/10/11, Active Directory and cloud-based systems such as Azure.
        </p>
        <p class="text-base mb-4">
          Object storage has become a mainstay with the prevalence of cloud-based infrastructure and as an open source advocate I've enjoyed working with and learning Minio, which is a next-gen, fully open source S3-compatible object storage solution. It's not always practical, cost effective or even possible to implement every solution using open source, self-hosted technologies. To that end I've worked with Amazon S3, Azure Blob Storage, Google Cloud Storage and more recently Cloudlare's R2 (currently my preference for new, cloud-based projects).
        </p>
    </div>
  </div>
  </section>
  <TestimonialsSection filter="storage" />
  <PricingAndInfoSection/>
</PageLayout>