---
import PageLayout from "@layouts/PageLayout.astro";
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import '@styles/custom.css';
import Card from '@components/ContentBoxes/Card.astro';
import Filter from '@components/Filter/Filter.astro';
import TagFilter from '@components/Filter/Tag.astro';
const posts = (await getCollection('blog', ({ data }: { data: { status: string, created_date: Date } }) => {
  return data.status === 'published';
}))
.sort((a: { data: { created_date: Date } }, b: { data: { created_date: Date } }) => 
  new Date(b.data.created_date).getTime() - new Date(a.data.created_date).getTime()
);

const tagsWithData = await Promise.all(posts.map(async (post: CollectionEntry<'blog'>) => ({
  ...post,
  data: {
    ...post.data,
    tags: post.data.tags 
      ? (await getCollection('tags', ({ id }: { id: string }) => post.data.tags?.map((t: { id: string }) => t.id).includes(id)))
        .map((tag: CollectionEntry<'tags'>) => ({
          id: tag.id,
          collection: tag.collection,
          data: { color: tag.data.color || '#000000' }
        }))
      : undefined
  }
})));
---

<PageLayout title="Blog">
  <section class="py-8 px-6 md:px-0">
    <Filter type="tag">
      <TagFilter posts={posts} />
    </Filter>
    <div class="w-full">

      <ul class="grid gap-8 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
        {tagsWithData.map((post) => (
          <Card 
            title={post.data.title}
            slug={post.data.slug}
            excerpt={post.data.excerpt}
            tags={post.data.tags}
            coverimage={post.data.coverimage}
            created_date={post.data.created_date}
            type="blog"
          />
        ))}
      </ul>
    </div>
  </section>
</PageLayout>

